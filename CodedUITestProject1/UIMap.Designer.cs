// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UILabTestingexeListItem.UIИмяEdit;
            WpfText uIВведите10четырехзначText = this.UILabWindow.UIВведите10четырехзначText;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow.UIFillTextBoxEdit;
            WpfRadioButton uIБольшеRadioButton = this.UILabWindow.UIБольшеRadioButton;
            WpfButton uIВыполнитьButton = this.UILabWindow.UIВыполнитьButton;
            WpfEdit uIAnswerTextBoxEdit = this.UILabWindow.UIAnswerTextBoxEdit;
            #endregion

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(31, 12));

            // Click 'Введите 10 четырехзначных элементов' label
            Mouse.Click(uIВведите10четырехзначText, new Point(232, 29));

            // Type '1111 2222 3333 4444 5555 6666 7777 8888 9999 1000' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RecordedMethod1Params.UIFillTextBoxEditText;

            // Click 'Больше' radio button
            Mouse.Click(uIБольшеRadioButton, new Point(45, 6));

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(52, 9));

            // Click 'answerTextBox' text box
            Mouse.Click(uIAnswerTextBoxEdit, new Point(264, 15));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WpfText uIВведите10четырехзначText = this.UILabWindow.UIВведите10четырехзначText;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow.UIFillTextBoxEdit;
            WpfRadioButton uIБольшеRadioButton = this.UILabWindow.UIБольшеRadioButton;
            WpfButton uIВыполнитьButton = this.UILabWindow.UIВыполнитьButton;
            WpfEdit uIAnswerTextBoxEdit = this.UILabWindow.UIAnswerTextBoxEdit;
            #endregion

            // Click 'Введите 10 четырехзначных элементов' label
            Mouse.Click(uIВведите10четырехзначText, new Point(297, 29));

            // Type '3221' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RecordedMethod2Params.UIFillTextBoxEditText;

            // Click 'Больше' radio button
            Mouse.Click(uIБольшеRadioButton, new Point(14, 6));

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(111, 10));

            // Click 'answerTextBox' text box
            Mouse.Click(uIAnswerTextBoxEdit, new Point(91, 17));
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UILabTestingexeListItem.UIИмяEdit;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow.UIFillTextBoxEdit;
            WpfRadioButton uIМеньшеRadioButton = this.UILabWindow.UIМеньшеRadioButton;
            WpfButton uIВыполнитьButton = this.UILabWindow.UIВыполнитьButton;
            WpfEdit uIAnswerTextBoxEdit = this.UILabWindow.UIAnswerTextBoxEdit;
            #endregion

            // Последнее действие мыши не записано.

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(25, 10));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(78, 14));

            // Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 121' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RecordedMethod3Params.UIFillTextBoxEditText;

            // Select 'Меньше' radio button
            uIМеньшеRadioButton.Selected = this.RecordedMethod3Params.UIМеньшеRadioButtonSelected;

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(88, 11));

            // Click 'answerTextBox' text box
            Mouse.Click(uIAnswerTextBoxEdit, new Point(95, 14));
        }
        
        /// <summary>
        /// RMethod1 - Use 'RMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RMethod1()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UILabTestingexeListItem.UIИмяEdit;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow1.UIFillTextBoxEdit;
            WpfRadioButton uIБольшеRadioButton = this.UILabWindow1.UIБольшеRadioButton;
            WpfButton uIВыполнитьButton = this.UILabWindow1.UIВыполнитьButton;
            WpfEdit uIAnswerTextBoxEdit = this.UILabWindow1.UIAnswerTextBoxEdit;
            #endregion

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(18, 11));

            // Type '1234 6543 2004 1231 7654 4355 5467 5435 6578 1111' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RMethod1Params.UIFillTextBoxEditText;

            // Click 'Больше' radio button
            Mouse.Click(uIБольшеRadioButton, new Point(35, 9));

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(106, 8));

            // Click 'answerTextBox' text box
            Mouse.Click(uIAnswerTextBoxEdit, new Point(271, 18));
        }
        
        /// <summary>
        /// RMethod2 - Use 'RMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RMethod2()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UILabTestingexeListItem.UIИмяEdit;
            WpfText uIВведите10четырехзначText = this.UILabWindow2.UIВведите10четырехзначText;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow2.UIFillTextBoxEdit;
            WpfButton uIВыполнитьButton = this.UILabWindow2.UIВыполнитьButton;
            WpfRadioButton uIМеньшеRadioButton = this.UILabWindow2.UIМеньшеRadioButton;
            WinButton uIЗакрытьButton = this.UILabWindow11.UIЗакрытьButton;
            #endregion

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(34, 12));

            // Click 'Введите 10 четырехзначных элементов' label
            Mouse.Click(uIВведите10четырехзначText, new Point(262, 32));

            // Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 1211' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RMethod2Params.UIFillTextBoxEditText;

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(41, 14));

            // Select 'Меньше' radio button
            uIМеньшеRadioButton.Selected = this.RMethod2Params.UIМеньшеRadioButtonSelected;

            // Click 'Закрыть' button
            Mouse.Click(uIЗакрытьButton, new Point(24, 12));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(63, 10));

            // Click 'Введите 10 четырехзначных элементов' label
            Mouse.Click(uIВведите10четырехзначText, new Point(145, 29));

            // Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 1211' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RMethod2Params.UIFillTextBoxEditText1;

            // Select 'Меньше' radio button
            uIМеньшеRadioButton.Selected = this.RMethod2Params.UIМеньшеRadioButtonSelected1;

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(75, 12));
        }
        
        /// <summary>
        /// RMethod3 - Use 'RMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RMethod3()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UILabTestingexeListItem.UIИмяEdit;
            WpfEdit uIFillTextBoxEdit = this.UILabWindow2.UIFillTextBoxEdit;
            WpfButton uIВыполнитьButton = this.UILabWindow2.UIВыполнитьButton;
            WpfEdit uIAnswerTextBoxEdit = this.UILabWindow2.UIAnswerTextBoxEdit;
            #endregion

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(33, 12));

            // Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 121' in 'fillTextBox' text box
            uIFillTextBoxEdit.Text = this.RMethod3Params.UIFillTextBoxEditText;

            // Click 'Выполнить' button
            Mouse.Click(uIВыполнитьButton, new Point(117, 17));

            // Click 'answerTextBox' text box
            Mouse.Click(uIAnswerTextBoxEdit, new Point(112, 8));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public virtual RMethod1Params RMethod1Params
        {
            get
            {
                if ((this.mRMethod1Params == null))
                {
                    this.mRMethod1Params = new RMethod1Params();
                }
                return this.mRMethod1Params;
            }
        }
        
        public virtual RMethod2Params RMethod2Params
        {
            get
            {
                if ((this.mRMethod2Params == null))
                {
                    this.mRMethod2Params = new RMethod2Params();
                }
                return this.mRMethod2Params;
            }
        }
        
        public virtual RMethod3Params RMethod3Params
        {
            get
            {
                if ((this.mRMethod3Params == null))
                {
                    this.mRMethod3Params = new RMethod3Params();
                }
                return this.mRMethod3Params;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UILabWindow UILabWindow
        {
            get
            {
                if ((this.mUILabWindow == null))
                {
                    this.mUILabWindow = new UILabWindow();
                }
                return this.mUILabWindow;
            }
        }
        
        public UILabWindow1 UILabWindow1
        {
            get
            {
                if ((this.mUILabWindow1 == null))
                {
                    this.mUILabWindow1 = new UILabWindow1();
                }
                return this.mUILabWindow1;
            }
        }
        
        public UILabWindow2 UILabWindow2
        {
            get
            {
                if ((this.mUILabWindow2 == null))
                {
                    this.mUILabWindow2 = new UILabWindow2();
                }
                return this.mUILabWindow2;
            }
        }
        
        public UILabWindow11 UILabWindow11
        {
            get
            {
                if ((this.mUILabWindow11 == null))
                {
                    this.mUILabWindow11 = new UILabWindow11();
                }
                return this.mUILabWindow11;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private RMethod1Params mRMethod1Params;
        
        private RMethod2Params mRMethod2Params;
        
        private RMethod3Params mRMethod3Params;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UILabWindow mUILabWindow;
        
        private UILabWindow1 mUILabWindow1;
        
        private UILabWindow2 mUILabWindow2;
        
        private UILabWindow11 mUILabWindow11;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1111 2222 3333 4444 5555 6666 7777 8888 9999 1000' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "1111 2222 3333 4444 5555 6666 7777 8888 9999 1000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '3221' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "3221";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 121' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "1009 2345 1879 2081 1699 3456 9870 5467 1212 121";
        
        /// <summary>
        /// Select 'Меньше' radio button
        /// </summary>
        public bool UIМеньшеRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1234 6543 2004 1231 7654 4355 5467 5435 6578 1111' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "1234 6543 2004 1231 7654 4355 5467 5435 6578 1111";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 1211' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "1009 2345 1879 2081 1699 3456 9870 5467 1212 1211";
        
        /// <summary>
        /// Select 'Меньше' radio button
        /// </summary>
        public bool UIМеньшеRadioButtonSelected = true;
        
        /// <summary>
        /// Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 1211' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText1 = "1009 2345 1879 2081 1699 3456 9870 5467 1212 1211";
        
        /// <summary>
        /// Select 'Меньше' radio button
        /// </summary>
        public bool UIМеньшеRadioButtonSelected1 = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1009 2345 1879 2081 1699 3456 9870 5467 1212 121' in 'fillTextBox' text box
        /// </summary>
        public string UIFillTextBoxEditText = "1009 2345 1879 2081 1699 3456 9870 5467 1212 121";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UILabTestingexeListItem UILabTestingexeListItem
        {
            get
            {
                if ((this.mUILabTestingexeListItem == null))
                {
                    this.mUILabTestingexeListItem = new UILabTestingexeListItem(this);
                }
                return this.mUILabTestingexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UILabTestingexeListItem mUILabTestingexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILabTestingexeListItem : WinListItem
    {
        
        public UILabTestingexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "LabTesting.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILabWindow : WpfWindow
    {
        
        public UILabWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Lab";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lab");
            #endregion
        }
        
        #region Properties
        public WpfText UIВведите10четырехзначText
        {
            get
            {
                if ((this.mUIВведите10четырехзначText == null))
                {
                    this.mUIВведите10четырехзначText = new WpfText(this);
                    #region Search Criteria
                    this.mUIВведите10четырехзначText.SearchProperties[WpfText.PropertyNames.AutomationId] = "textBlock2";
                    this.mUIВведите10четырехзначText.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIВведите10четырехзначText;
            }
        }
        
        public WpfEdit UIFillTextBoxEdit
        {
            get
            {
                if ((this.mUIFillTextBoxEdit == null))
                {
                    this.mUIFillTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFillTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "fillTextBox";
                    this.mUIFillTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIFillTextBoxEdit;
            }
        }
        
        public WpfRadioButton UIБольшеRadioButton
        {
            get
            {
                if ((this.mUIБольшеRadioButton == null))
                {
                    this.mUIБольшеRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIБольшеRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Больше";
                    this.mUIБольшеRadioButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIБольшеRadioButton;
            }
        }
        
        public WpfButton UIВыполнитьButton
        {
            get
            {
                if ((this.mUIВыполнитьButton == null))
                {
                    this.mUIВыполнитьButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIВыполнитьButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "runButton";
                    this.mUIВыполнитьButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIВыполнитьButton;
            }
        }
        
        public WpfEdit UIAnswerTextBoxEdit
        {
            get
            {
                if ((this.mUIAnswerTextBoxEdit == null))
                {
                    this.mUIAnswerTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIAnswerTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "answerTextBox";
                    this.mUIAnswerTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIAnswerTextBoxEdit;
            }
        }
        
        public WpfRadioButton UIМеньшеRadioButton
        {
            get
            {
                if ((this.mUIМеньшеRadioButton == null))
                {
                    this.mUIМеньшеRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIМеньшеRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Меньше";
                    this.mUIМеньшеRadioButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIМеньшеRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIВведите10четырехзначText;
        
        private WpfEdit mUIFillTextBoxEdit;
        
        private WpfRadioButton mUIБольшеRadioButton;
        
        private WpfButton mUIВыполнитьButton;
        
        private WpfEdit mUIAnswerTextBoxEdit;
        
        private WpfRadioButton mUIМеньшеRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILabWindow1 : WpfWindow
    {
        
        public UILabWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Lab";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.FilterProperties[WpfWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Lab");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIFillTextBoxEdit
        {
            get
            {
                if ((this.mUIFillTextBoxEdit == null))
                {
                    this.mUIFillTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFillTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "fillTextBox";
                    this.mUIFillTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIFillTextBoxEdit;
            }
        }
        
        public WpfRadioButton UIБольшеRadioButton
        {
            get
            {
                if ((this.mUIБольшеRadioButton == null))
                {
                    this.mUIБольшеRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIБольшеRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Больше";
                    this.mUIБольшеRadioButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIБольшеRadioButton;
            }
        }
        
        public WpfButton UIВыполнитьButton
        {
            get
            {
                if ((this.mUIВыполнитьButton == null))
                {
                    this.mUIВыполнитьButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIВыполнитьButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "runButton";
                    this.mUIВыполнитьButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIВыполнитьButton;
            }
        }
        
        public WpfEdit UIAnswerTextBoxEdit
        {
            get
            {
                if ((this.mUIAnswerTextBoxEdit == null))
                {
                    this.mUIAnswerTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIAnswerTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "answerTextBox";
                    this.mUIAnswerTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIAnswerTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIFillTextBoxEdit;
        
        private WpfRadioButton mUIБольшеRadioButton;
        
        private WpfButton mUIВыполнитьButton;
        
        private WpfEdit mUIAnswerTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILabWindow2 : WpfWindow
    {
        
        public UILabWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Lab";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.FilterProperties[WpfWindow.PropertyNames.OrderOfInvocation] = "3";
            this.WindowTitles.Add("Lab");
            #endregion
        }
        
        #region Properties
        public WpfText UIВведите10четырехзначText
        {
            get
            {
                if ((this.mUIВведите10четырехзначText == null))
                {
                    this.mUIВведите10четырехзначText = new WpfText(this);
                    #region Search Criteria
                    this.mUIВведите10четырехзначText.SearchProperties[WpfText.PropertyNames.AutomationId] = "textBlock2";
                    this.mUIВведите10четырехзначText.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIВведите10четырехзначText;
            }
        }
        
        public WpfEdit UIFillTextBoxEdit
        {
            get
            {
                if ((this.mUIFillTextBoxEdit == null))
                {
                    this.mUIFillTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFillTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "fillTextBox";
                    this.mUIFillTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIFillTextBoxEdit;
            }
        }
        
        public WpfButton UIВыполнитьButton
        {
            get
            {
                if ((this.mUIВыполнитьButton == null))
                {
                    this.mUIВыполнитьButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIВыполнитьButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "runButton";
                    this.mUIВыполнитьButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIВыполнитьButton;
            }
        }
        
        public WpfRadioButton UIМеньшеRadioButton
        {
            get
            {
                if ((this.mUIМеньшеRadioButton == null))
                {
                    this.mUIМеньшеRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIМеньшеRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Меньше";
                    this.mUIМеньшеRadioButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIМеньшеRadioButton;
            }
        }
        
        public WpfEdit UIAnswerTextBoxEdit
        {
            get
            {
                if ((this.mUIAnswerTextBoxEdit == null))
                {
                    this.mUIAnswerTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIAnswerTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "answerTextBox";
                    this.mUIAnswerTextBoxEdit.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIAnswerTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIВведите10четырехзначText;
        
        private WpfEdit mUIFillTextBoxEdit;
        
        private WpfButton mUIВыполнитьButton;
        
        private WpfRadioButton mUIМеньшеRadioButton;
        
        private WpfEdit mUIAnswerTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILabWindow11 : WinWindow
    {
        
        public UILabWindow11()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lab";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "3";
            this.WindowTitles.Add("Lab");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Lab");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
}
